1
00:00:00,475 --> 00:00:02,100
大家好
ALEXIS MOUSSINE-POUCHKINE: Hi everyone.

2
00:00:02,100 --> 00:00:06,295
我们在美丽的安特卫普Devoxx 2014现场发回报道
We're here at Devoxx 2014 in beautiful Antwerp, Belgium.

3
00:00:06,295 --> 00:00:09,630
今天天气很凉爽
It's kind of cold today, actually.

4
00:00:09,630 --> 00:00:14,180
我们将和我旁边的这位嘉宾谈一谈关于Chrome Apps 的相关事宜
And I'm here with my guest to talk about Chrome Apps everywhere.

5
00:00:14,180 --> 00:00:16,157
请简单的做一下自我介绍吧
And maybe you can introduce yourself.

6
00:00:16,157 --> 00:00:16,990
好的
ANDREW GRIEVE: Sure.

7
00:00:16,990 --> 00:00:20,110
大家好  我是Andrew Grieve   目前从事Chrome移动项目
So my name's Andrew Grieve, and I work on the Chrome Apps

8
00:00:20,110 --> 00:00:22,948
相关 App 的开发工作
for Mobile project.

9
00:00:22,948 --> 00:00:26,510
我在 Google 从事了6年的web开发工作
Yeah, I've been doing web development for the past six

10
00:00:26,510 --> 00:00:28,594
那是一段非常有趣的时光
years at Google, and it's always an exciting time.

11
00:00:28,594 --> 00:00:29,926
ALEXIS MOUSSINE-POUCHKINE: Yeah.

12
00:00:29,926 --> 00:00:31,440
web是一个很有意思的领域
The web is an exciting place.

13
00:00:31,440 --> 00:00:34,080
从事web开发工作一直都很振奋人心
And it's always a good time to be developing for the web.

14
00:00:34,080 --> 00:00:37,130
言归正传  Chrome apps和mobile
So Chrome apps and mobile, so these are probably

15
00:00:37,130 --> 00:00:38,650
这是我们今天将要谈论的两个话题
the two things we'll talk about.

16
00:00:38,650 --> 00:00:40,010
第一个话题  Chrome apps
The first one, Chrome apps.

17
00:00:40,010 --> 00:00:43,720
你能为我们或者是新的听众们  重新诠释一下
Can you maybe redefine this for those that haven't heard of it

18
00:00:43,720 --> 00:00:45,710
chrome app 吗
or need a refresh.

19
00:00:45,710 --> 00:00:50,097
它们和普通的网页或者是 web扩展有什么区别?
How do they differ from web pages or web extensions?

20
00:00:50,097 --> 00:00:50,930
ANDREW GRIEVE: Sure.

21
00:00:50,930 --> 00:00:51,430
Sure.

22
00:00:51,430 --> 00:00:55,960
事实上Chrome apps的历史还算不上漫长
So Chrome apps have had-- it's actually a fairly short history.

23
00:00:55,960 --> 00:00:57,490
拿我们所熟悉的桌面版chrome app来说
As we know them today for desktop,

24
00:00:57,490 --> 00:01:03,850
它们在2012年稍晚的时候才正式上线  所以到现在也就两年时间
they were only made available late 2012, so only a couple years old.

25
00:01:03,850 --> 00:01:05,459
Chrome apps和网页最大的区别在于
And the big difference from web pages

26
00:01:05,459 --> 00:01:09,020
它们不是在浏览器的标签页里面运行的
is really that they don't run within a browser tab.

27
00:01:09,020 --> 00:01:11,460
chrome apps有着独立的运行窗口
So they have to run in their own window,

28
00:01:11,460 --> 00:01:15,230
这也是和广义上的web apps的一道分水岭
and this distinguishes them from regular web apps.

29
00:01:15,230 --> 00:01:17,540
你可以通过Chrome web store
So you get them through the Chrome Web Store.

30
00:01:17,540 --> 00:01:20,740
下载并安装它们
They are downloaded and installed.

31
00:01:20,740 --> 00:01:23,420
和传统的web app不同
And the main reason why you'd want them over a regular web

32
00:01:23,420 --> 00:01:27,880
chrome apps能通过相关权限  利用更加强大的API
app is that they have permission to use more powerful APIs,

33
00:01:27,880 --> 00:01:35,820
比如说身份认证  socket通信
so things like the user's identity, raw sockets,

34
00:01:35,820 --> 00:01:43,100
同步存储等等  更加强大引人入胜的API
or synced storage, some really more powerful and compelling APIs.

35
00:01:43,100 --> 00:01:44,668
所以说  关于Chrome app你谈到了两件事
ALEXIS MOUSSINE-POUCHKINE: So there are two things you mentioned.

36
00:01:44,668 --> 00:01:48,060
第一件事是它有独立的运行窗口
The first is the actual-- its own window.

37
00:01:48,060 --> 00:01:50,610
那么也就意味着这是完全仿真的
It probably means it can be totally immersive

38
00:01:50,610 --> 00:01:52,800
你不会知道它
and you don't really know it is powered

39
00:01:52,800 --> 00:01:55,000
是由一个web引擎或者是渲染引擎所驱动的
by a web engine or a rendering engine?

40
00:01:55,000 --> 00:01:55,875
是的
ANDREW GRIEVE: Right.

41
00:01:55,875 --> 00:01:56,417
That's right.

42
00:01:56,417 --> 00:01:59,083
ALEXIS MOUSSINE-POUCHKINE: Maybe you want to comment about that.

43
00:01:59,083 --> 00:02:01,210
第二件事情则是关于安全方面的
And second question is about the security aspect.

44
00:02:01,210 --> 00:02:03,340
Chrome app非常的安全
It is very secure, though.

45
00:02:03,340 --> 00:02:06,420
尽管它能通过更加强大API
Although it has those additional powers and APIs

46
00:02:06,420 --> 00:02:08,079
来接入硬件
to access the hardware and all that,

47
00:02:08,079 --> 00:02:09,549
与此同时它也非常的安全
it is very secure at the same time.

48
00:02:09,549 --> 00:02:11,590
你对这两件事怎么看?
So maybe you want to comment on those two things.

49
00:02:11,590 --> 00:02:14,350
ANDREW GRIEVE: Yeah.

50
00:02:14,350 --> 00:02:17,450
正如你所说  Chrome apps不仅能在标签页之外运行
So as you were saying, not only do they run outside of a tab,

51
00:02:17,450 --> 00:02:20,270
而且它们还有着独立于浏览器的窗口
but they run as their own window and separate from the browser.

52
00:02:20,270 --> 00:02:22,720
因此也就意味着chrome apps有自己的桌面图标
So that means they have their own desktop icon,

53
00:02:22,720 --> 00:02:26,780
同时也能通过Alt+tab进行程序切换
they have their own Alt tab entry.

54
00:02:26,780 --> 00:02:29,257
那么对于大多数用户来说  也许他(她)们
And to most users, they'd be really hard pressed

55
00:02:29,257 --> 00:02:31,465
会很难的察觉到  这一切都是源于web技术创造的
to figure out that they were built on web technology.

56
00:02:31,465 --> 00:02:31,870
ALEXIS MOUSSINE-POUCHKINE: Yeah.

57
00:02:31,870 --> 00:02:33,850
Chrome apps本地集成于操作系统
They're very-- there's native integration

58
00:02:33,850 --> 00:02:36,000
无论是任何操作的系统
with the OS, whichever OS that is.

59
00:02:36,000 --> 00:02:37,610
是的
ANDREW GRIEVE: Exactly.

60
00:02:37,610 --> 00:02:42,010
谈到安全  你还真说到点上了
And as far security goes, you also are right on point

61
00:02:42,010 --> 00:02:43,540
总体来说
there as well, that in general, they

62
00:02:43,540 --> 00:02:46,930
Chrome apps比任何一个典型的桌面程序都要安全
are more secure than typical desktop applications.

63
00:02:49,439 --> 00:02:51,480
我的意思是  大部分的Chrome app
I mean, a large part of that is just because it's

64
00:02:51,480 --> 00:02:53,610
都是由Chrome团队所开发的
built by the Chrome team, and I've really never

65
00:02:53,610 --> 00:02:56,320
并且这是我所接触过的
been on a team more paranoid, I guess,

66
00:02:56,320 --> 00:02:58,300
对安全的要求最几近于偏执的团队
about security than the Chrome team.

67
00:02:58,300 --> 00:03:02,770
所有的app都运行在沙盒机制下
So all the apps run in sandboxes.

68
00:03:02,770 --> 00:03:05,964
这就有效的限制了它们的能力
And there's really locked-down capabilities of what they can do.

69
00:03:05,964 --> 00:03:08,296
并且内容安全策略
ALEXIS MOUSSINE-POUCHKINE: So there's a content security

70
00:03:08,296 --> 00:03:10,380
也是必须要有
policy that's-- you need to have one.

71
00:03:10,380 --> 00:03:11,890
不可或缺的
You can't run without one.

72
00:03:11,890 --> 00:03:15,225
一个普通web站点可以没有  但是Chrome app不能
A regular website could, but a Chrome app cannot.

73
00:03:15,225 --> 00:03:16,100
是的
ANDREW GRIEVE: Right.

74
00:03:16,100 --> 00:03:21,030
内容安全策略是HTML5提供的新API
So content security policy is a fairly new HTML5 kind of API

75
00:03:21,030 --> 00:03:22,150
来源于HTML5
that's come out in it.

76
00:03:22,150 --> 00:03:25,690
目前可以广泛的在网络上进行运用
And it is available for use on the open web.

77
00:03:25,690 --> 00:03:27,440
但是对于大多数网页来说这是可以选择的
But it's an opt-in thing.

78
00:03:27,440 --> 00:03:29,740
然而对于Chrome apps,唯一的不同在于你别无它选
So for Chrome Apps, the difference is it's not opt-in.

79
00:03:29,740 --> 00:03:30,690
你必须使用它
You must use it.

80
00:03:30,690 --> 00:03:34,650
这就得以有效地防范了大多数的XSS攻击
And it really just helps prevent mostly against XSS attacks.

81
00:03:34,650 --> 00:03:36,420
而理论的依据
And the rationale there is really

82
00:03:36,420 --> 00:03:39,970
正因为我们给了开发者更加强悍有力的API
just because we're giving you these more capable and powerful

83
00:03:39,970 --> 00:03:45,804
所以用户承担的风险比遭受攻击要高多的多
APIs, so the risk is kind of even greater to attacks.

84
00:03:45,804 --> 00:03:47,970
还有一件事情
ALEXIS MOUSSINE-POUCHKINE: And part of these things,

85
00:03:47,970 --> 00:03:50,260
Chrome app已经正式的上线有一段时间了
Chrome apps have been out for a little while already.

86
00:03:50,260 --> 00:03:53,550
并且市面上也有许多被开发出来广受人们欢迎的
We have good examples of popular apps that have been built

87
00:03:53,550 --> 00:03:55,720
优秀App
and that people are using.

88
00:03:55,720 --> 00:04:00,740
但是我在想今天有没有一种新的可能
But what is new, I would think, is the ability

89
00:04:00,740 --> 00:04:03,950
运用同样的技术来开发移动版的chrome apps
to build mobile apps nowadays with the same technology.

90
00:04:03,950 --> 00:04:07,400
Oh  顺便说一下  chrome app就是运用web技术开发的
Oh, and by the way, Chrome apps are being built with web technologies,

91
00:04:07,400 --> 00:04:09,860
我想大家都已经明白了
as I think people have understood by now.

92
00:04:09,860 --> 00:04:12,810
无非是些JavaScript  HTML5以及CSS
It's all about JavaScript, HTML5, CSS.

93
00:04:12,810 --> 00:04:17,660
既然现在能利用这些技术和工具能开发出类桌面程序的chrome app
So take those skills that you have, those tools that you have to build

94
00:04:17,660 --> 00:04:20,700
那么理论上移动版的app也应该适用
desktop-like apps, but also mobile apps nowadays.

95
00:04:20,700 --> 00:04:21,735
这其中的奥秘是什么?
So how does that work?

96
00:04:21,735 --> 00:04:22,610
ANDREW GRIEVE: Right.

97
00:04:22,610 --> 00:04:26,157
对这个话题我了如指掌
So that is what I'm more intimately familiar with.

98
00:04:26,157 --> 00:04:28,490
这也是过去的两年  我一直在努力的方向
That's what I've been working on for the past two years.

99
00:04:28,490 --> 00:04:30,530
实际上  移动版的chrome app
So Chrome Apps for Mobile is actually

100
00:04:30,530 --> 00:04:32,430
目前还处于开发者预览的阶段
just still in a developer preview phase.

101
00:04:32,430 --> 00:04:36,030
但是现在  我觉得还是有不少被开发出来的优秀app的
So there are some, I think, pretty compelling apps being

102
00:04:36,030 --> 00:04:40,470
目前它仍然是非常之火的领域
built with it currently, but it's still hot off the press.

103
00:04:40,470 --> 00:04:43,197
你可以把它看作是一个 Apache Cordova 应用
And you can mostly think of that as a Cordova application.

104
00:04:43,197 --> 00:04:45,280
事实上移动版的Chrome App和普通的Apache Cordova
There's not a huge difference between a Chrome App

105
00:04:45,280 --> 00:04:49,560
没有太大的区别
for Mobile application and a regular Apache Cordova application.

106
00:04:49,560 --> 00:04:53,980
Apache Cordova是一个长期项目
So Apache Cordova is a fairly long-lived project,

107
00:04:53,980 --> 00:04:56,610
使得开发者能够很容易的开发出基于HTML和JavaScript的应用
which makes it easy to create HTML and JavaScript

108
00:04:56,610 --> 00:05:00,560
并在移动平台上部署
applications and deploy them to mobile platforms,

109
00:05:00,560 --> 00:05:03,365
是一种本地应用程序  但它是用web技术开发的
as true native apps but built with web technology.

110
00:05:03,365 --> 00:05:04,740
那么
ALEXIS MOUSSINE-POUCHKINE: So how

111
00:05:04,740 --> 00:05:08,560
Chrome App和我开发的  比如说  一个使用WebView的
would that differ from me building, say, an Android

112
00:05:08,560 --> 00:05:11,670
本地Android应用有什么不同呢
native app using a WebView?

113
00:05:11,670 --> 00:05:15,350
实际本质上没什么不同
ANDREW GRIEVE: So actually it wouldn't differ all that much.

114
00:05:15,350 --> 00:05:17,230
总体来说Cordova应用可以看成是
So Cordova applications, in general,

115
00:05:17,230 --> 00:05:19,810
一个占据整个页面的的WebView
are a WebView taking up the entire page

116
00:05:19,810 --> 00:05:22,476
并且渲染应用UI
and rendering your UI that way.

117
00:05:22,476 --> 00:05:24,100
如果说最大的不同的话  那就是
So the biggest difference, I would say,

118
00:05:24,100 --> 00:05:29,590
它提供了一个抽象概念  得以让你在多平台上运行
is it provides an abstraction that lets you target multiple platforms.

119
00:05:29,590 --> 00:05:32,410
iOS和Android都是Chrome App所支持的
So iOS, Android is what we support

120
00:05:32,410 --> 00:05:35,974
并且Cordova本身也支持跨平台的一些
on Chrome Apps for Mobile, and then Cordova itself supports

121
00:05:35,974 --> 00:05:39,340
移动操作系统
pretty much every mobile operating system that you can think of.

122
00:05:39,340 --> 00:05:40,881
ALEXIS MOUSSINE-POUCHKINE: But do you

123
00:05:40,881 --> 00:05:42,900
need to develop to some very lowest

124
00:05:42,900 --> 00:05:46,130
common denominator in terms of what a WebView can support?

125
00:05:46,130 --> 00:05:48,450
I know one of the nice, very new features,

126
00:05:48,450 --> 00:05:51,450
I believe, in Android is the fact that the Chrome WebView is

127
00:05:51,450 --> 00:05:54,330
now something that is being updated on a very regular basis.

128
00:05:54,330 --> 00:05:55,850
It's been externalized.

129
00:05:55,850 --> 00:05:56,740
Right
ANDREW GRIEVE: Right.

130
00:05:56,740 --> 00:05:58,156
得益于Android平台上
ALEXIS MOUSSINE-POUCHKINE: You get

131
00:05:58,156 --> 00:06:02,490
Chrome WebView中的WebGL支持
take benefits of having WebGL in the Chrome WebView on Android.

132
00:06:02,490 --> 00:06:04,900
你大可不必在所有的平台上都那样做
You may not be able to do this on all the platforms.

133
00:06:04,900 --> 00:06:06,850
那么开发者如何应对呢?
So how does a developer deal with that?

134
00:06:06,850 --> 00:06:09,090
这也是项目所留下的长期的
ANDREW GRIEVE: Yes so this was historically

135
00:06:09,090 --> 00:06:14,650
一个历史性的问题
a really kind of growing problem for the project for a long time.

136
00:06:14,650 --> 00:06:19,489
这个问题最近才得以解决
And it's only recently kind of been addressed in a meaningful way.

137
00:06:19,489 --> 00:06:23,010
我也非常高兴的的说这是一种非常讨巧的解决方法
So I'm really happy to say that there is a meaningful answer here.

138
00:06:23,010 --> 00:06:26,630
随着Android L的发布
So like you said, as with Android L

139
00:06:26,630 --> 00:06:29,180
系统中的WebView就是基于Chromium的
this system WebView is based on Chromium,

140
00:06:29,180 --> 00:06:33,200
我相信随着chrome M37版本的来临
I believe M37 at launch, and it is updatable outside

141
00:06:33,200 --> 00:06:35,230
它会作为Android的附属组件而更新的
of Android updates.

142
00:06:35,230 --> 00:06:36,220
听起来棒极了
That's awesome.

143
00:06:36,220 --> 00:06:41,450
对于iOS中WebView  iOS 8的诞生也带来了全新的WebView
The iOS WebView, as of iOS 8, they came up with a brand new WebView.

144
00:06:41,450 --> 00:06:44,300
现在同样可以加速JavaScript以及WebGL
Now it has accelerated JavaScript and WebGL as well.

145
00:06:44,300 --> 00:06:45,320
所以iOS中一样可以胜任
So very capable there.

146
00:06:45,320 --> 00:06:51,000
并也iOS系统的更新  采纳率也非常之高
And iOS system updates are quite well adopted.

14
00:06:51,000 --> 00:06:52,670
当然目前的问题是
Of course the question still is, what

148
00:06:52,670 --> 00:06:55,830
对于那些没有使用Android L的用户来说怎么办
about people that aren't running Android L, which

149
00:06:55,830 --> 00:07:00,640

has been out for approximately one day now.

150
00:07:00,640 --> 00:07:06,350
我们的解决方案是利用Intel Crosswalk这个开源项目
So our answer, at least, there is the Intel Crosswalk

151
00:07:06,350 --> 00:07:11,240
Intel Crosswalk是一个将Chromiium WebView
open source project, which is a bundling of the Chromium

152
00:07:11,240 --> 00:07:14,850
打包进应用的Web引擎
WebView inside your application.

153
00:07:14,850 --> 00:07:17,580
但其也有一定的开销  主要体现在应用体积上
So there's a couple trade-offs, mainly the size of it.

154
00:07:17,580 --> 00:07:21,650
APK 文件里大约增加 17MB
It adds about 17 megabytes to your APK size.

155
00:07:21,650 --> 00:07:25,130
总体来说  我们认为这也不是什么
But for most, we haven't heard that this is actually

156
00:07:25,130 --> 00:07:25,810
大问题
a big problem.

157
00:07:25,810 --> 00:07:29,110
至少它能让你在所有的Android版本中
And it lets you use the latest and greatest WebView

158
00:07:29,110 --> 00:07:31,237
用上最新最棒的Webview
on all Android targets.

159
00:07:31,237 --> 00:07:33,570
那么我们刚刚谈了一些关于
ALEXIS MOUSSINE-POUCHKINE: So walk us maybe a little bit

160
00:07:33,570 --> 00:07:37,325
工作流  工具  以及API这类的东西
through the workflow, the tooling, the APIs.

161
00:07:37,325 --> 00:07:39,290
假如我想开始第一个Hello world项目
I want to start my "Hello, World,"

162
00:07:39,290 --> 00:07:41,820
构建属于我自己的  基于Chrome App的移动App
and probably move a little bit beyond that

163
00:07:41,820 --> 00:07:46,331
那么过程应该会比刚刚谈的复杂一点儿吧
and build my first Chrome App-based mobile app.

164
00:07:46,331 --> 00:07:47,080
这其中究竟是怎样实现的
What does it take?

165
00:07:47,080 --> 00:07:47,410
ANDREW GRIEVE: Yeah.

166
00:07:47,410 --> 00:07:48,951
有很多的方式
So there's a couple of options there.

167
00:07:48,951 --> 00:07:51,560
这里说一下最简单的开发一个Hello world的方式
I'd say the easiest just for building a "Hello, World,"

168
00:07:51,560 --> 00:07:55,160
使用Chrome Dev Editor就可以
and toying around a little bit is to use the Chrome Dev Editor.

169
00:07:55,160 --> 00:07:56,850
Chrome Dev Editor
So this is, again, a project that

170
00:07:56,850 --> 00:07:59,900
也是在今夏Google I/O上面发布的新项目
was announced at the last Google I/O this summer.

171
00:07:59,900 --> 00:08:04,220
它是一个基于Chrome App构建的IDE
And it's an IDE which is actually built as a Chrome app itself.

172
00:08:04,220 --> 00:08:08,760
也是一种非常酷的技术演示
So that's kind of cool as a technology demonstration.

173
00:08:08,760 --> 00:08:11,962
但是该IDE只能用于创建Chrome Apps
But it's IDE just for building from Chrome Apps.

174
00:08:11,962 --> 00:08:13,374
Chrome Dev Editor提供若干模板
So there's templates in there.

175
00:08:13,374 --> 00:08:14,290
里面会有一个 Play 按钮
There's a Play button.

176
00:08:14,290 --> 00:08:16,770
你点击按钮  它就会把你的应用
If you click Play, it'll open your application

177
00:08:16,770 --> 00:08:18,540
作为桌面Chrome应用程序打开
as a desktop Chrome App.

178
00:08:18,540 --> 00:08:21,610
如果你在companion tool中的下拉菜单里
And then if you use the drop-down menu in our companion

179
00:08:21,610 --> 00:08:23,910
选择使为移动端提供的Chrome App开发者工具的话
tool for the Chrome App Developer tool for mobile,

180
00:08:23,910 --> 00:08:26,460
就会提供一个部署到移动设备的按钮
then there's a Deploy to Mobile Device button.

181
00:08:26,460 --> 00:08:30,410
所以你就可以很容易地
So you could easily, without installing any SDKs,

182
00:08:30,410 --> 00:08:32,690
不用安装任何SDK就能创建面向桌面和移动设备的
play around with what your app would look like

183
00:08:32,690 --> 00:08:34,460
Chrome和Web应用程序
both on mobile and on desktop.

184
00:08:34,460 --> 00:08:35,793
Yeah
ALEXIS MOUSSINE-POUCHKINE: Yeah.

185
00:08:35,793 --> 00:08:37,770
所以说开发一个Hello world非常之快
So the time to "Hello, World" is very

186
00:08:37,770 --> 00:08:39,775
我的意思是  没有SDK
short in this-- I mean, no SDKs.

187
00:08:39,775 --> 00:08:41,400
是的  这可以算得上是
ANDREW GRIEVE: That's the quickest path

188
00:08:41,400 --> 00:08:43,027
写hello world最快速的捷径了
to a "Hello, World," for sure.

189
00:08:43,027 --> 00:08:44,860
最后
ALEXIS MOUSSINE-POUCHKINE: And eventually, I

190
00:08:44,860 --> 00:08:46,920
出色的应用已经开发完毕
do build this awesome app.

191
00:08:46,920 --> 00:08:49,700
我只需要把应用打包
And I just package this and distribute this

192
00:08:49,700 --> 00:08:52,830
通过Play store或者是Apple store发布就行了
through traditional Play stores or Apple stores.

193
00:08:52,830 --> 00:08:53,330
对吗
Right?

194
00:08:53,330 --> 00:08:53,895
就是这样的一个流程
That's how it works.

195
00:08:53,895 --> 00:08:54,230
Yeah
ANDREW GRIEVE: Yeah.

196
00:08:54,230 --> 00:08:54,729
Yeah
Yeah.

197
00:08:54,729 --> 00:08:55,660
For mobile, exactly.

198
00:08:55,660 --> 00:08:59,970
So the App Store and iOS or the Play store on Android.

199
00:08:59,970 --> 00:09:02,580
Once you get past your typical "Hello, World,"

200
00:09:02,580 --> 00:09:05,290
you want to install our command line tools.

201
00:09:05,290 --> 00:09:08,500
So we have-- Cordova's tools are based on Node.js,

202
00:09:08,500 --> 00:09:11,470
as are ours, for Chrome Apps for Mobile.

203
00:09:11,470 --> 00:09:14,675
And we give you kind of a Ruby on Rails style--

204
00:09:14,675 --> 00:09:16,300
ALEXIS MOUSSINE POUCHKINE: Scaffolding.

205
00:09:16,300 --> 00:09:17,320
ANDREW GRIEVE: Yeah, exactly.

206
00:09:17,320 --> 00:09:19,160
You can do-- CCA is the name of the tool.

207
00:09:19,160 --> 00:09:24,354
So cca Create Project, cca Build Android.

208
00:09:24,354 --> 00:09:25,770
And that's about the extent of it,

209
00:09:25,770 --> 00:09:29,320
so you need to install your SDKs at this point for this tool.

210
00:09:29,320 --> 00:09:31,510
But then we give you a nice wrapper around them

211
00:09:31,510 --> 00:09:35,180
to just say cca build Android, cca build iOS.

212
00:09:35,180 --> 00:09:37,180
And then that's what you upload to the stores.

213
00:09:37,180 --> 00:09:37,470
ALEXIS MOUSSINE POUCHKINE: And I'm

214
00:09:37,470 --> 00:09:41,090
pretty sure having command line also helps with continuous integration

215
00:09:41,090 --> 00:09:44,880
and integrating this in any build environment

216
00:09:44,880 --> 00:09:47,112
and development environment that developers have.

217
00:09:47,112 --> 00:09:47,945
Yeah
ANDREW GRIEVE: Yeah.

218
00:09:47,945 --> 00:09:49,910
多数的Web开发者
ALEXIS MOUSSINE-POUCHKINE: So web developers

219
00:09:49,910 --> 00:09:54,360
习惯于使用各种框架以及开发库
love using frameworks or libraries, whatever you want to call them.

220
00:09:54,360 --> 00:10:00,620
对于移动的Chrome App来说,
Does Chrome Apps recommend against or to use some libraries, if any,

221
00:10:00,620 --> 00:10:02,847
有任何官方推荐或者不建议使用的库或者框架吗?
especially in the mobile case?

222
00:10:02,847 --> 00:10:03,680
Yeah
ANDREW GRIEVE: Yeah.

223
00:10:03,680 --> 00:10:05,860
I mean, that's mostly a question we

224
00:10:05,860 --> 00:10:09,640
try to stay out of a little bit.

225
00:10:09,640 --> 00:10:12,815
There's new frameworks popping up all the time.

226
00:10:12,815 --> 00:10:14,440
I'd say our project goal is to give you

227
00:10:14,440 --> 00:10:19,910
the awesomest, most powerful blank canvas to work with as possible.

228
00:10:19,910 --> 00:10:21,285
ALEXIS MOUSSINE POUCHKINE: Right.

229
00:10:21,285 --> 00:10:22,742
So you're not mandating anything.

230
00:10:22,742 --> 00:10:23,700
ANDREW GRIEVE: Exactly.

231
00:10:23,700 --> 00:10:25,730
So Polymer, I think, is a promising project.

232
00:10:25,730 --> 00:10:27,840
Angular, I've had good times with.

233
00:10:27,840 --> 00:10:32,780
Ionic is a really popular Angular-based framework

234
00:10:32,780 --> 00:10:35,380
for Cordova-based applications, which

235
00:10:35,380 --> 00:10:38,970
works just fine for Chrome Apps for Mobile.

236
00:10:38,970 --> 00:10:42,239
I mean, my personal advice is to spend the time

237
00:10:42,239 --> 00:10:44,530
to at least understand what these frameworks are doing.

238
00:10:44,530 --> 00:10:47,800
But I wouldn't say I have a strong preference for any of them.

239
00:10:47,800 --> 00:10:49,020
ALEXIS MOUSSINE POUCHKINE: Choice is good.

240
00:10:49,020 --> 00:10:50,120
I like choice.

241
00:10:50,120 --> 00:10:53,080
So maybe to close off, you're here presenting at Devoxx.

242
00:10:53,080 --> 00:10:57,910
And I think you also have some tips or information about what

243
00:10:57,910 --> 00:10:59,830
kind of paradigm works for developers.

244
00:10:59,830 --> 00:11:00,580
Maybe mobile apps.

245
00:11:00,580 --> 00:11:02,288
I mean, the things that really work well,

246
00:11:02,288 --> 00:11:04,810
things that don't work all that well that people shouldn't

247
00:11:04,810 --> 00:11:07,310
maybe use yet or at all, because it's just

248
00:11:07,310 --> 00:11:09,950
not the way they should build things in this environment.

249
00:11:09,950 --> 00:11:13,757
Do you want to tell us more about this?

250
00:11:13,757 --> 00:11:14,590
ANDREW GRIEVE: Yeah.

251
00:11:14,590 --> 00:11:21,070
So I do have kind of developer guidance, I would say,

252
00:11:21,070 --> 00:11:22,460
tips and tricks in my talk.

253
00:11:26,040 --> 00:11:28,160
Mostly I'd say what works well is just--

254
00:11:28,160 --> 00:11:29,720
the main thing I find is just make

255
00:11:29,720 --> 00:11:33,370
sure you have that fast feedback loop when you're developing.

256
00:11:33,370 --> 00:11:36,150
And that's kind of one of the best things about developing

257
00:11:36,150 --> 00:11:38,390
for the web platform wherever you are.

258
00:11:38,390 --> 00:11:41,300
So for Cordova applications, the main trick there

259
00:11:41,300 --> 00:11:45,390
is to remember that you're building using web,

260
00:11:45,390 --> 00:11:51,550
so it doesn't take much to make your mobile application

261
00:11:51,550 --> 00:11:53,490
run on a desktop browser.

262
00:11:53,490 --> 00:11:55,790
And Chrome Dev Tools emulation mode

263
00:11:55,790 --> 00:11:59,404
gives you a really easy way to make

264
00:11:59,404 --> 00:12:01,070
Chrome pretend like it's a mobile device

265
00:12:01,070 --> 00:12:03,410
and shrink your view port and whatnot.

266
00:12:03,410 --> 00:12:04,840
It's really fast and convenient.

267
00:12:04,840 --> 00:12:07,600
So it's no replacement for testing on device,

268
00:12:07,600 --> 00:12:10,605
but it certainly makes for a compelling workflow.

269
00:12:10,605 --> 00:12:11,980
ALEXIS MOUSSINE POUCHKINE: Great.

270
00:12:11,980 --> 00:12:16,420
So what is the status of this project altogether?

271
00:12:16,420 --> 00:12:18,010
I mean, can people use it today?

272
00:12:18,010 --> 00:12:20,250
And would you recommend people shipping

273
00:12:20,250 --> 00:12:22,527
apps built on top of that today?

274
00:12:22,527 --> 00:12:23,360
ANDREW GRIEVE: Yeah.

275
00:12:23,360 --> 00:12:29,010
So I'd say every application has different requirements.

276
00:12:29,010 --> 00:12:31,850
Certainly for some, this would be a perfectly reasonable

277
00:12:31,850 --> 00:12:34,120
platform to use today.

278
00:12:34,120 --> 00:12:36,640
There are some rough edges around us finishing up

279
00:12:36,640 --> 00:12:38,990
the Crosswalk integration, for example.

280
00:12:41,670 --> 00:12:44,260
For example, we haven't yet updated cca

281
00:12:44,260 --> 00:12:48,400
to support the iPhone 6 Plus icon sizes.

282
00:12:48,400 --> 00:12:51,550
So we'll have that done probably next week, some rough edges.

283
00:12:51,550 --> 00:12:54,890
But I'd say for the most part, we're ready.

284
00:12:54,890 --> 00:12:59,212
We've responded quickly to our bug tracker on GitHub.

285
00:12:59,212 --> 00:13:00,670
ALEXIS MOUSSINE-POUCHKINE: And this

286
00:13:00,670 --> 00:13:03,810
is a good time to mention that this is a fully open source project.

287
00:13:03,810 --> 00:13:04,050
ANDREW GRIEVE: Yes.

288
00:13:04,050 --> 00:13:04,330
ALEXIS MOUSSINE-POUCHKINE: So if people

289
00:13:04,330 --> 00:13:07,890
want to support, help, or at least know what's going on,

290
00:13:07,890 --> 00:13:09,007
it's done in the open.

291
00:13:09,007 --> 00:13:09,965
ANDREW GRIEVE: Exactly.

292
00:13:09,965 --> 00:13:10,580
Yeah.

293
00:13:10,580 --> 00:13:11,830
ALEXIS MOUSSINE-POUCHKINE: OK.

294
00:13:11,830 --> 00:13:12,788
Well thank you, Andrew.

295
00:13:12,788 --> 00:13:14,950
That's, I guess, all the time we have for it.

296
00:13:14,950 --> 00:13:17,140
So thank you for answering my questions.

297
00:13:17,140 --> 00:13:19,070
And we'll be seeing you soon.

298
00:13:19,070 --> 00:13:19,890
Online probably.

299
00:13:19,890 --> 00:13:20,931
ANDREW GRIEVE: All right.

300
00:13:20,931 --> 00:13:21,670
Thanks.
